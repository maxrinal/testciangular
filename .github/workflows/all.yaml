name: Full

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - poc/import_json
    tags:
      - archive/releases/**
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: '20.x'

jobs:
  preinstall:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install package
        run: npm ci --ignore-scripts

  test:
    needs: preinstall
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install package
        run: npm ci --ignore-scripts

      - name: Test
        # ng test --no-watch --no-progress --browsers=ChromeHeadless ##  https://angular.dev/guide/testing#testing-in-continuous-integration
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless

  build_generic:
    needs: preinstall
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install package
        run: npm ci --ignore-scripts

      # Try to download artifact from previous build
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: dist-version-${{ github.sha }}
          path: dist

      # Build only if dist not exist
      - name: Build
        if: ${{ hashFiles('dist/') == '' }}
        run: npm run build
        # run: if [ ! -d 'dist' ]; then echo 'npm run build'; fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        # continue-on-error: true
        with:
          name: dist-version-${{ github.sha }}
          path: dist
          # overwrite: true

  Deploy_Dev:
    needs:
      - test
      - build_generic
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-version-${{ github.sha }}
          path: dist

      - name: List current files
        run: ls -R .

      # angular doesnt have index.js
      # - name: Deploy saved files
      #   run: cat dist/index.js

  Deploy_Prod:
    needs:
      - Deploy_Dev
    runs-on: ubuntu-latest
    environment: Prod
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-version-${{ github.sha }}
          path: dist

      - name: List current files
        run: ls -R .

      # - name: Deploy saved files
      #   run: cat dist/index.js
# TEST
# act -j test -P ubuntu-latest=markhobson/node-chrome:latest --pull=false

# BUILD
# act -j build_generic -P ubuntu-latest=node:20-slim
